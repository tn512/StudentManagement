/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package studentmanagementsystem;

import java.awt.Container;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Locale;
import java.util.ResourceBundle;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ADMIN
 */
public class pnCreateClass extends javax.swing.JPanel implements DocumentListener {

    Validation v = new Validation();
    private Connection con; //Ket noi DB
    private Statement stm; //Thuc hien cau lenh SQL
    private ResultSet rs; //Chua du lieu va xu ly
    DefaultTableModel tbl;

    /**
     * Creates new form pnCreateClass
     */
    frmStart fS = new frmStart();

    public pnCreateClass() {
        initComponents();
        connectDB();
        jPanel2.setVisible(false);
        txtName.getDocument().addDocumentListener(this);
        txtPlace.getDocument().addDocumentListener(this);
        txtStudent.getDocument().addDocumentListener(this);
        txtSubject.getDocument().addDocumentListener(this);
        txtTeacher.getDocument().addDocumentListener(this);
        txtTerm.getDocument().addDocumentListener(this);
    }

    public void connectDB() {
        //Nap trinh dieu khien
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
        //Ket noi voi DB
        try {
            String url = "jdbc:sqlserver://DESKTOP-VES4POV\\SQLEXPRESS:1433;databaseName=StudentDatabase";
            String user = "tn512";
            String password = "Ngoc1234";
            con = DriverManager.getConnection(url, user, password);
            System.out.println("Connect successfully!");
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblClass = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblTerm = new javax.swing.JLabel();
        txtTerm = new javax.swing.JTextField();
        lblPlace = new javax.swing.JLabel();
        txtPlace = new javax.swing.JTextField();
        lblTeacher = new javax.swing.JLabel();
        txtTeacher = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        lblSubject = new javax.swing.JLabel();
        txtSubject = new javax.swing.JTextField();
        lblSlot = new javax.swing.JLabel();
        btnReset = new javax.swing.JButton();
        cboSlot = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListStudent = new javax.swing.JList<>();
        btnCreate = new javax.swing.JButton();
        lblStudent = new javax.swing.JLabel();
        txtStudent = new javax.swing.JTextField();
        btnSend = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        btnVN = new javax.swing.JButton();
        btnEN = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 0)), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        lblClass.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblClass.setText("Class Name:");

        txtName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lblTerm.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTerm.setText("Term:");

        txtTerm.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lblPlace.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblPlace.setText("Place:");

        txtPlace.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lblTeacher.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTeacher.setText("Teacher ID:");

        txtTeacher.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        btnAdd.setBackground(new java.awt.Color(255, 102, 102));
        btnAdd.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 0, 0));
        btnAdd.setText("ADD");
        btnAdd.setEnabled(false);
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(255, 102, 102));
        btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 0, 0));
        btnUpdate.setText("UPDATE");
        btnUpdate.setEnabled(false);
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        lblSubject.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblSubject.setText("Subject ID:");

        txtSubject.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lblSlot.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblSlot.setText("Slot:");

        btnReset.setBackground(new java.awt.Color(255, 102, 102));
        btnReset.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnReset.setForeground(new java.awt.Color(255, 0, 0));
        btnReset.setText("RESET");
        btnReset.setEnabled(false);
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        cboSlot.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cboSlot.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(lblTeacher)
                                .addGap(29, 29, 29))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblSubject)
                                .addGap(34, 34, 34)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTeacher, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSlot)
                            .addComponent(lblTerm)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblClass)
                        .addGap(322, 322, 322)
                        .addComponent(lblPlace)))
                .addGap(73, 73, 73)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtTerm, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPlace, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboSlot, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblClass)
                        .addComponent(txtPlace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblPlace))
                    .addComponent(btnAdd, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnReset))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTeacher)
                            .addComponent(txtTeacher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTerm)
                            .addComponent(txtTerm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSubject)
                            .addComponent(txtSubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSlot)
                            .addComponent(cboSlot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel1)))
                .addGap(6, 6, 6))
        );

        jPanel2.setBackground(new java.awt.Color(153, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jScrollPane1.setViewportView(ListStudent);

        btnCreate.setBackground(new java.awt.Color(255, 102, 102));
        btnCreate.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnCreate.setForeground(new java.awt.Color(255, 0, 0));
        btnCreate.setText("CREATE");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        lblStudent.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblStudent.setText("Student ID:");

        txtStudent.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        btnSend.setBackground(new java.awt.Color(255, 102, 102));
        btnSend.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnSend.setForeground(new java.awt.Color(255, 0, 0));
        btnSend.setText(">>");
        btnSend.setEnabled(false);
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lblStudent)
                                .addGap(31, 31, 31)
                                .addComponent(btnSend))
                            .addComponent(txtStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnCreate)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblStudent)
                            .addComponent(btnSend))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtStudent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCreate)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 19, Short.MAX_VALUE)
        );

        btnVN.setText("VN");
        btnVN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVNActionPerformed(evt);
            }
        });

        btnEN.setText("EN");
        btnEN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnENActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(134, 134, 134)
                        .addComponent(btnVN)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEN)
                        .addGap(29, 29, 29))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(204, 204, 204))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(51, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnVN)
                            .addComponent(btnEN))
                        .addContainerGap())))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if (!checkExistTeacher(txtTeacher.getText())) {
            JOptionPane.showMessageDialog(null, "Teacher ID has not existed!");
            return;
        }
        if (!checkExistSub(txtSubject.getText())) {
            JOptionPane.showMessageDialog(null, "Subject ID has not existed!");
            return;
        }
        if (checkClassNSubject(txtName.getText(), txtSubject.getText())) {
            JOptionPane.showMessageDialog(null, "This Class has already had this Subject!");
            return;
        }
        if (checkClassSlot(txtName.getText(), cboSlot.getSelectedItem().toString())) {
            JOptionPane.showMessageDialog(null, "This Class has already had this Slot!");
            return;
        }
        if (checkTeacherSlot(txtTeacher.getText(), cboSlot.getSelectedItem().toString())) {
            JOptionPane.showMessageDialog(null, "This Teacher has already had this Slot!");
            return;
        }
        jPanel2.setVisible(true);
        Container c = this.getParent();
        while (c.getParent() != null) {
            c = c.getParent();
        }
        JFrame parent = new JFrame();
        if (c instanceof JFrame) {
            parent = (JFrame) c;
        } else {
            parent = null;
        }
        parent.pack();
        fS = (frmStart) parent;
        fS.manage();
        fS.pack();


    }//GEN-LAST:event_btnAddActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        txtName.setText("");
        txtPlace.setText("");
        txtTeacher.setText("");
        txtTerm.setText("");
        txtSubject.setText("");
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        if (students.getSize() < 1) {
            JOptionPane.showMessageDialog(null, "The Class has to have at least 10 students!");
            return;
        }
        for (int i = 0; i < students.getSize(); i++) {
            try {
                String studentCode = students.get(i).toString();
                String subjectCode = txtSubject.getText();
                String teacherCode = txtTeacher.getText();
                String term = txtTerm.getText();
                String Class = txtName.getText();
                String place = txtPlace.getText();
                String mark = "NULL";
                String slot = cboSlot.getSelectedItem().toString();
                stm = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
                String strInsert = "Insert into tblStudying values('"
                        + studentCode + "','" + subjectCode + "','" + teacherCode
                        + "','" + term + "','" + Class + "','" + place + "',"
                        + mark + ",'" + slot + "')";
                stm.execute(strInsert);
            } catch (Exception e) {
                System.out.println("Create: " + e.getMessage());
            }
        }
        JOptionPane.showMessageDialog(null, "Create Successfully!");
        //Close
        jPanel2.setVisible(false);
        Container c = this.getParent();
        while (c.getParent() != null) {
            c = c.getParent();
        }
        JFrame parent = new JFrame();
        if (c instanceof JFrame) {
            parent = (JFrame) c;
        } else {
            parent = null;
        }
        parent.pack();
        fS = (frmStart) parent;
        fS.manage();
        fS.pack();
    }//GEN-LAST:event_btnCreateActionPerformed

    final DefaultListModel students = new DefaultListModel();

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        if (!checkExistStu(txtStudent.getText())) {
            JOptionPane.showMessageDialog(null, "This Student has not existed!");
            return;
        }
        if (checkStudentNSubject(txtStudent.getText(), txtSubject.getText())) {
            JOptionPane.showMessageDialog(null, "This Student has already had this Subject!");
            return;
        }
        if (checkStudentSlot(txtStudent.getText(), cboSlot.getSelectedItem().toString())) {
            JOptionPane.showMessageDialog(null, "This Student has already had this Slot!");
            return;
        }
        students.addElement(txtStudent.getText());
        ListStudent.setModel(students);
        txtStudent.setText("");
    }//GEN-LAST:event_btnSendActionPerformed

    void findClassInfo(String Class, String subject) {
        try {
            //Select du lieu trong bang tblSubject
            stm = con.createStatement();
            rs = stm.executeQuery("Select * from tblStudying where class = '" + Class + "' and subjectID = '" + subject + "'");
            rs.first();
            txtPlace.setText(rs.getString(6));
            txtTeacher.setText(rs.getString(3));
            txtTerm.setText(rs.getString(4));
            cboSlot.setSelectedItem(rs.getInt(8));
        } catch (Exception e) {
            System.out.println("Show: " + e.getMessage());
        }
    }

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        if (!checkClassNSubject(txtName.getText(), txtSubject.getText())) {
            JOptionPane.showMessageDialog(null, "This Class has not existed!");
            return;
        }
        jPanel2.setVisible(true);
        Container c = this.getParent();
        while (c.getParent() != null) {
            c = c.getParent();
        }
        JFrame parent = new JFrame();
        if (c instanceof JFrame) {
            parent = (JFrame) c;
        } else {
            parent = null;
        }
        parent.pack();
        fS = (frmStart) parent;
        fS.manage();
        fS.pack();
        findClassInfo(txtName.getText(), txtSubject.getText());
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnVNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVNActionPerformed
        lblClass.setText("Ten Lop:");
        lblTeacher.setText("Ma Giao Vien:");
        lblSubject.setText("Ma Mon:");
        lblPlace.setText("Dia Diem:");
        lblTerm.setText("Ky:");
        lblSlot.setText("Tiet:");
        lblStudent.setText("Ma Sinh Vien:");
        btnAdd.setText("Tao");
        btnUpdate.setText("Sua");
        btnReset.setText("Hoan Tac");
        btnCreate.setText("Mo Lop");
    }//GEN-LAST:event_btnVNActionPerformed

    private void btnENActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnENActionPerformed
//        Locale vi_Locale = new Locale("vi", "VN");
//        ResourceBundle vi_bundle = ResourceBundle.getBundle("language_vi_VN", vi_Locale);
//        lblClass.setText(vi_bundle.getString("className"));
//        lblTeacher.setText(vi_bundle.getString("teacherID"));
//        lblSubject.setText(vi_bundle.getString("subjectID"));
//        lblPlace.setText(vi_bundle.getString("place"));
//        lblTerm.setText(vi_bundle.getString("term"));
//        lblSlot.setText(vi_bundle.getString("slot"));
//        lblStudent.setText(vi_bundle.getString("studentID"));
        lblClass.setText("Class Name:");
        lblTeacher.setText("Teacher ID:");
        lblSubject.setText("Subject ID:");
        lblPlace.setText("Place:");
        lblTerm.setText("Term:");
        lblSlot.setText("Slot:");
        lblStudent.setText("Student ID:");
        btnAdd.setText("ADD");
        btnUpdate.setText("UPDATE");
        btnReset.setText("RESET");
        btnCreate.setText("CREATE");
    }//GEN-LAST:event_btnENActionPerformed

    public boolean checkExistTeacher(String teacherCode) {
        //true - ID ton tai
        //false - ID chua ton tai
        try {
            stm = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            rs = stm.executeQuery("select * from  tblTeacher where code = '" + teacherCode + "'");
            rs.first();
            String a = rs.getString(1);
            return true;
        } catch (Exception e) {
            return false;
        }
    }

    public boolean checkExistSub(String subCode) {
        //true - ID ton tai
        //false - ID chua ton tai
        try {
            stm = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            rs = stm.executeQuery("select * from  tblSubject where code = '" + subCode + "'");
            rs.first();
            String a = rs.getString(1);
            return true;
        } catch (Exception e) {
            return false;
        }
    }

    public boolean checkExistStu(String StuCode) {
        //true - ID ton tai
        //false - ID chua ton tai
        try {
            stm = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            rs = stm.executeQuery("select * from  tblStudent where code = '" + StuCode + "'");
            rs.first();
            String a = rs.getString(1);
            return true;
        } catch (Exception e) {
            return false;
        }
    }

    public boolean checkExistClass(String Class) {
        //true - ID ton tai
        //false - ID chua ton tai
        try {
            stm = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            rs = stm.executeQuery("select * from  tblStudying where class = '" + Class + "'");
            rs.first();
            String a = rs.getString(1);
            return true;
        } catch (Exception e) {
            return false;
        }
    }

    public boolean checkClassSlot(String Class, String Slot) {
        //true - ID ton tai
        //false - ID chua ton tai
        try {
            stm = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            rs = stm.executeQuery("select * from  tblStudying where class = '" + Class + "' and slot = " + Slot);
            rs.first();
            String a = rs.getString(1);
            return true;
        } catch (Exception e) {
            return false;
        }
    }

    public boolean checkTeacherSlot(String teacherID, String Slot) {
        //true - ID ton tai
        //false - ID chua ton tai
        try {
            stm = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            rs = stm.executeQuery("select * from  tblStudying where teacherCode = '" + teacherID + "' and slot = " + Slot);
            rs.first();
            String a = rs.getString(1);
            return true;
        } catch (Exception e) {
            return false;
        }
    }

    public boolean checkStudentSlot(String studentID, String Slot) {
        //true - ID ton tai
        //false - ID chua ton tai
        try {
            stm = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            rs = stm.executeQuery("select * from  tblStudying where studentCode = '" + studentID + "' and slot = " + Slot + " and mark is null");
            rs.first();
            String a = rs.getString(1);
            return true;
        } catch (Exception e) {
            return false;
        }
    }

    public boolean checkClassNSubject(String Class, String SubjectID) {
        //true - ID ton tai
        //false - ID chua ton tai
        try {
            stm = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            rs = stm.executeQuery("select * from  tblStudying where class = '" + Class + "' and subjectCode = '" + SubjectID + "'");
            rs.first();
            String a = rs.getString(1);
            return true;
        } catch (Exception e) {
            return false;
        }
    }

    public boolean checkStudentNSubject(String studentID, String SubjectID) {
        //true - ID ton tai
        //false - ID chua ton tai
        try {
            stm = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            rs = stm.executeQuery("select * from  tblStudying where studentCode = '" + studentID + "' and subjectCode = '" + SubjectID + "' and mark is null");
            rs.first();
            String a = rs.getString(1);
            return true;
        } catch (Exception e) {
            return false;
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> ListStudent;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnEN;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSend;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnVN;
    private javax.swing.JComboBox<String> cboSlot;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblClass;
    private javax.swing.JLabel lblPlace;
    private javax.swing.JLabel lblSlot;
    private javax.swing.JLabel lblStudent;
    private javax.swing.JLabel lblSubject;
    private javax.swing.JLabel lblTeacher;
    private javax.swing.JLabel lblTerm;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPlace;
    private javax.swing.JTextField txtStudent;
    private javax.swing.JTextField txtSubject;
    private javax.swing.JTextField txtTeacher;
    private javax.swing.JTextField txtTerm;
    // End of variables declaration//GEN-END:variables

    @Override
    public void insertUpdate(DocumentEvent e) {
        if (!txtName.getText().isEmpty() && !txtPlace.getText().isEmpty()
                && !txtSubject.getText().isEmpty() && !txtTeacher.getText().isEmpty()
                && !txtTerm.getText().isEmpty()) {
            btnAdd.setEnabled(true);
        } else {
            btnAdd.setEnabled(false);
        }
        if (!txtName.getText().isEmpty() || !txtPlace.getText().isEmpty()
                || !txtSubject.getText().isEmpty() || !txtTeacher.getText().isEmpty()
                || !txtTerm.getText().isEmpty()) {
            btnReset.setEnabled(true);
        } else {
            btnReset.setEnabled(false);
        }
        if (!txtName.getText().isEmpty() && !txtSubject.getText().isEmpty()) {
            btnUpdate.setEnabled(true);
        } else {
            btnUpdate.setEnabled(false);
        }
        if (!txtStudent.getText().isEmpty()) {
            btnSend.setEnabled(true);
        } else {
            btnSend.setEnabled(false);
        }
    }

    @Override
    public void removeUpdate(DocumentEvent e) {
        if (!txtName.getText().isEmpty() && !txtPlace.getText().isEmpty()
                && !txtSubject.getText().isEmpty() && !txtTeacher.getText().isEmpty()
                && !txtTerm.getText().isEmpty()) {
            btnAdd.setEnabled(true);
        } else {
            btnAdd.setEnabled(false);
        }
        if (!txtName.getText().isEmpty() || !txtPlace.getText().isEmpty()
                || !txtSubject.getText().isEmpty() || !txtTeacher.getText().isEmpty()
                || !txtTerm.getText().isEmpty()) {
            btnReset.setEnabled(true);
        } else {
            btnReset.setEnabled(false);
        }
        if (!txtName.getText().isEmpty() && !txtSubject.getText().isEmpty()) {
            btnUpdate.setEnabled(true);
        } else {
            btnUpdate.setEnabled(false);
        }
        if (!txtStudent.getText().isEmpty()) {
            btnSend.setEnabled(true);
        } else {
            btnSend.setEnabled(false);
        }
    }

    @Override
    public void changedUpdate(DocumentEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
